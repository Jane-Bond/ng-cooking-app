{"ast":null,"code":"import { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../recipes/recipe.service\";\nexport class DataStorageService {\n  constructor(http, recipeService) {\n    this.http = http;\n    this.recipeService = recipeService;\n  }\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http.put(\"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\", recipes).subscribe(response => {\n      console.log(response);\n    });\n  }\n  fetchRecipes() {\n    this.http.get(\"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\").pipe(map(recipes => {\n      return recipes.map(recipe => {\n        return {\n          ...recipe,\n          ingredients: recipe.ingredients ? recipe.ingredients : []\n        };\n      });\n    })).subscribe(recipes => {\n      this.recipeService.setRecipes(recipes);\n    });\n  }\n}\nDataStorageService.ɵfac = function DataStorageService_Factory(t) {\n  return new (t || DataStorageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService));\n};\nDataStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataStorageService,\n  factory: DataStorageService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAKA,SAASA,GAAG,QAAQ,gBAAgB;;;;AAGpC,OAAM,MAAOC,kBAAkB;EAC7BC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,kBAAa,GAAbC,aAAa;EAAkB;EAE7EC,YAAY;IACV,MAAMC,OAAO,GAAG,IAAI,CAACF,aAAa,CAACG,UAAU,EAAE;IAC/C,IAAI,CAACJ,IAAI,CACNK,GAAG,CACF,+FAA+F,EAC/FF,OAAO,CACR,CACAG,SAAS,CAAEC,QAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC;EACN;EAEAG,YAAY;IACV,IAAI,CAACV,IAAI,CACNW,GAAG,CACF,+FAA+F,CAChG,CACAC,IAAI,CACHf,GAAG,CAAEM,OAAO,IAAI;MACd,OAAOA,OAAO,CAACN,GAAG,CAAEgB,MAAM,IAAI;QAC5B,OAAO;UACL,GAAGA,MAAM;UACTC,WAAW,EAAED,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,GAAG;SACxD;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,CACH,CACAR,SAAS,CAAEH,OAAO,IAAI;MACrB,IAAI,CAACF,aAAa,CAACc,UAAU,CAACZ,OAAO,CAAC;IACxC,CAAC,CAAC;EACN;;AAjCWL,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAkB,SAAlBlB,kBAAkB;EAAAmB,YADL;AAAM","names":["map","DataStorageService","constructor","http","recipeService","storeRecipes","recipes","getRecipes","put","subscribe","response","console","log","fetchRecipes","get","pipe","recipe","ingredients","setRecipes","factory","providedIn"],"sourceRoot":"","sources":["/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/shared/data-storage.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { RecipeService } from \"../recipes/recipe.service\";\nimport { Recipe } from \"../recipes/recipe.model\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable({ providedIn: \"root\" })\nexport class DataStorageService {\n  constructor(private http: HttpClient, private recipeService: RecipeService) {}\n\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http\n      .put(\n        \"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\",\n        recipes\n      )\n      .subscribe((response) => {\n        console.log(response);\n      });\n  }\n\n  fetchRecipes() {\n    this.http\n      .get<Recipe[]>(\n        \"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\"\n      )\n      .pipe(\n        map((recipes) => {\n          return recipes.map((recipe) => {\n            return {\n              ...recipe,\n              ingredients: recipe.ingredients ? recipe.ingredients : [],\n            };\n          });\n        })\n      )\n      .subscribe((recipes) => {\n        this.recipeService.setRecipes(recipes);\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}