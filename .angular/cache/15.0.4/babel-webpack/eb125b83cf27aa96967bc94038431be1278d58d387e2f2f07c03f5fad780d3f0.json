{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { exhaustMap, take, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../recipes/recipe.service\";\nimport * as i3 from \"../auth/auth.service\";\nexport class DataStorageService {\n  constructor(http, recipeService, authService) {\n    this.http = http;\n    this.recipeService = recipeService;\n    this.authService = authService;\n  }\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http.put(\"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\", recipes).subscribe(response => {\n      console.log(response);\n    });\n  }\n  fetchRecipes() {\n    return this.authService.user.pipe(take(1), exhaustMap(user => {\n      return this.http.get(\"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\", {\n        params: new HttpParams().set()\n      });\n    }));\n  }\n  map() {}\n}\nDataStorageService.ɵfac = function DataStorageService_Factory(t) {\n  return new (t || DataStorageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService), i0.ɵɵinject(i3.AuthService));\n};\nDataStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataStorageService,\n  factory: DataStorageService.ɵfac,\n  providedIn: \"root\"\n});\nrecipes => {\n  return recipes.map(recipe => {\n    return {\n      ...recipe,\n      ingredients: recipe.ingredients ? recipe.ingredients : []\n    };\n  });\n};\ntap(recipes => {\n  this.recipeService.setRecipes(recipes);\n});\n;","map":{"version":3,"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAI7D,SAASC,UAAU,EAAOC,IAAI,EAAEC,GAAG,QAAQ,gBAAgB;;;;;AAI3D,OAAM,MAAOC,kBAAkB;EAC7BC,YACUC,IAAgB,EAChBC,aAA4B,EAC5BC,WAAwB;IAFxB,SAAI,GAAJF,IAAI;IACJ,kBAAa,GAAbC,aAAa;IACb,gBAAW,GAAXC,WAAW;EAClB;EAEHC,YAAY;IACV,MAAMC,OAAO,GAAG,IAAI,CAACH,aAAa,CAACI,UAAU,EAAE;IAC/C,IAAI,CAACL,IAAI,CACNM,GAAG,CACF,+FAA+F,EAC/FF,OAAO,CACR,CACAG,SAAS,CAAEC,QAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC;EACN;EAEAG,YAAY;IACV,OAAO,IAAI,CAACT,WAAW,CAACU,IAAI,CAACC,IAAI,CAC/BjB,IAAI,CAAC,CAAC,CAAC,EACPD,UAAU,CAAEiB,IAAI,IAAI;MAClB,OAAO,IAAI,CAACZ,IAAI,CAACc,GAAG,CAClB,+FAA+F,EAC/F;QACEC,MAAM,EAAE,IAAIrB,UAAU,EAAC,CAACsB,GAAG;OAAE,CAAC;IAChC,CAAC,CACF;EACH;EACAC,GAAG,IAAC;;AA9BGnB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAoB,SAAlBpB,kBAAkB;EAAAqB,YADL;AAAM;AA+BrBf,OAAO,IAAI;EACd,OAAOA,OAAO,CAACa,GAAG,CAAEG,MAAM,IAAI;IAC5B,OAAO;MACL,GAAGA,MAAM;MACTC,WAAW,EAAED,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,GAAG;KACxD;EACH,CAAC,CAAC;AACJ,CAAC;AACDxB,GAAG,CAAEO,OAAO,IAAI;EACd,IAAI,CAACH,aAAa,CAACqB,UAAU,CAAClB,OAAO,CAAC;AACxC,CAAC,CAAC;AACH","names":["HttpParams","exhaustMap","take","tap","DataStorageService","constructor","http","recipeService","authService","storeRecipes","recipes","getRecipes","put","subscribe","response","console","log","fetchRecipes","user","pipe","get","params","set","map","factory","providedIn","recipe","ingredients","setRecipes"],"sourceRoot":"","sources":["/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/shared/data-storage.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\n\nimport { RecipeService } from \"../recipes/recipe.service\";\nimport { Recipe } from \"../recipes/recipe.model\";\nimport { exhaustMap, map, take, tap } from \"rxjs/operators\";\nimport { AuthService } from \"../auth/auth.service\";\n\n@Injectable({ providedIn: \"root\" })\nexport class DataStorageService {\n  constructor(\n    private http: HttpClient,\n    private recipeService: RecipeService,\n    private authService: AuthService\n  ) {}\n\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http\n      .put(\n        \"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\",\n        recipes\n      )\n      .subscribe((response) => {\n        console.log(response);\n      });\n  }\n\n  fetchRecipes() {\n    return this.authService.user.pipe(\n      take(1),\n      exhaustMap((user) => {\n        return this.http.get<Recipe[]>(\n          \"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\",\n          {\n            params: new HttpParams(.set())\n          }\n        );\n      }),\n      map((recipes) => {\n        return recipes.map((recipe) => {\n          return {\n            ...recipe,\n            ingredients: recipe.ingredients ? recipe.ingredients : [],\n          };\n        });\n      }),\n      tap((recipes) => {\n        this.recipeService.setRecipes(recipes);\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}