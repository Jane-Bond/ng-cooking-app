{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/forms\";\nexport class AuthComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.isLoginMode = true;\n    this.isLoading = false;\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  onSubmit(form) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n    this.isLoading = true;\n    if (this.isLoginMode) {\n      //....\n    } else {\n      this.authService.signup(email, password).subscribe(resData => {\n        console.log(resData);\n      }, error => {\n        console.log(error);\n      });\n    }\n    form.reset();\n  }\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"button\", 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \" | \");\n      i0.ɵɵelementStart(16, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_16_listener() {\n        return ctx.onSwitchMode();\n      });\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isLoginMode ? \"Log In\" : \"Sign Up\", \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" Switch to \", ctx.isLoginMode ? \"Sign Up\" : \"Log In\", \" \");\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.EmailValidator, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAH/B,gBAAW,GAAG,IAAI;IAClB,cAAS,GAAG,KAAK;EAE8B;EAE/CC,YAAY;IACV,IAAI,CAACC,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EAEAC,QAAQ,CAACC,IAAY;IACnB,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;MACf;;IAEF,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACD,KAAK;IAC9B,MAAME,QAAQ,GAAGJ,IAAI,CAACG,KAAK,CAACC,QAAQ;IAEpC,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACP,WAAW,EAAE;MACpB;IAAA,CACD,MAAM;MACL,IAAI,CAACF,WAAW,CAACU,MAAM,CAACJ,KAAK,EAAEE,QAAQ,CAAC,CAACG,SAAS,CAC/CC,OAAO,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACtB,CAAC,EACAG,KAAK,IAAI;QACRF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB,CAAC,CACF;;IAGHX,IAAI,CAACY,KAAK,EAAE;EACd;;AAhCWlB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCR1BC,8BAAiB;MAEYA;QAAAA;QAAA;QAAA,OAAYA,gCAAkB;MAAA,EAAC;MACtDA,8BAAwB;MACHA,sBAAM;MAAAA,iBAAQ;MACjCA,2BAQE;MACJA,iBAAM;MACNA,8BAAwB;MACAA,yBAAQ;MAAAA,iBAAQ;MACtCA,4BAQE;MACJA,iBAAM;MACNA,4BAAK;MAMDA,aACF;MAAAA,iBAAS;MACTA,oBACA;MAAAA,mCAAuE;MAAzBA;QAAA,OAASC,kBAAc;MAAA,EAAC;MACpED,aACF;MAAAA,iBAAS;;;;MAPPA,gBAA4B;MAA5BA,qCAA4B;MAE5BA,eACF;MADEA,uEACF;MAGEA,eACF;MADEA,iFACF","names":["AuthComponent","constructor","authService","onSwitchMode","isLoginMode","onSubmit","form","valid","email","value","password","isLoading","signup","subscribe","resData","console","log","error","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/auth/auth.component.ts","/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/auth/auth.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { AuthService } from \"./auth.service\";\n\n@Component({\n  selector: \"app-auth\",\n  templateUrl: \"./auth.component.html\",\n})\nexport class AuthComponent {\n  isLoginMode = true;\n  isLoading = false;\n\n  constructor(private authService: AuthService) {}\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    this.isLoading = true;\n    if (this.isLoginMode) {\n      //....\n    } else {\n      this.authService.signup(email, password).subscribe(\n        (resData) => {\n          console.log(resData);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n\n    form.reset();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n    <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\n      <div class=\"form-group\">\n        <label for=\"email\">E-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          class=\"form-control\"\n          ngModel\n          name=\"email\"\n          required\n          email\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          class=\"form-control\"\n          ngModel\n          name=\"password\"\n          required\n          minlength=\"6\"\n        />\n      </div>\n      <div>\n        <button\n          class=\"btn btn-primary\"\n          type=\"submit\"\n          [disabled]=\"!authForm.valid\"\n        >\n          {{ isLoginMode ? \"Log In\" : \"Sign Up\" }}\n        </button>\n        |\n        <button class=\"btn btn-primary\" type=\"button\" (click)=\"onSwitchMode()\">\n          Switch to {{ isLoginMode ? \"Sign Up\" : \"Log In\" }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}