{"ast":null,"code":"import { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nAuthResponseData;\n{\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n}\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  signup(email, passowrd) {\n    return this.http.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBySJaOQL3zotQIkxS7SV-b9ASWyB_s2y8\", {\n      email: email,\n      password: passowrd,\n      returnSecureToken: true\n    }).pipe(catchError);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,gBAAgB;;;AAGjCC,gBAAgB;AAAC;EACzBC,IAAI,EAAEC,MAAM;EACZC,OAAO,EAAED,MAAM;EACfE,KAAK,EAAEF,MAAM;EACbG,YAAY,EAAEH,MAAM;EACpBI,SAAS,EAAEJ,MAAM;EACjBK,OAAO,EAAEL,MAAM;;AAIjB,OAAM,MAAOM,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAM,CAACP,KAAa,EAAEQ,QAAgB;IACpC,OAAO,IAAI,CAACF,IAAI,CACbG,IAAI,CACH,uGAAuG,EACvG;MACET,KAAK,EAAEA,KAAK;MACZU,QAAQ,EAAEF,QAAQ;MAClBG,iBAAiB,EAAE;KACpB,CACF,CACAC,IAAI,CAACjB,UAAU,CAAC;EACrB;;AAdWS,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YADE;AAAM","names":["catchError","AuthResponseData","kind","string","idToken","email","refreshToken","expiresIn","localId","AuthService","constructor","http","signup","passowrd","post","password","returnSecureToken","pipe","factory","providedIn"],"sourceRoot":"","sources":["/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/auth/auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { catchError } from \"rxjs/operators\";\nimport { throw }\n\ninterface AuthResponseData {\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n}\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  signup(email: string, passowrd: string) {\n    return this.http\n      .post<AuthResponseData>(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBySJaOQL3zotQIkxS7SV-b9ASWyB_s2y8\",\n        {\n          email: email,\n          password: passowrd,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(catchError);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}