{"ast":null,"code":"import { AlertComponent } from \"../shared/alert/alert.component\";\nimport { PlaceholderDirective } from \"../shared/placeholder/placeholder.directive\";\nimport * as AuthActions from \"./store/auth.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngrx/store\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../shared/loading-spinner/loading-spinner.component\";\nimport * as i7 from \"../shared/placeholder/placeholder.directive\";\nfunction AuthComponent_ng_template_0_Template(rf, ctx) {}\nfunction AuthComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6, 7);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const _r3 = i0.ɵɵreference(1);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit(_r3));\n    });\n    i0.ɵɵelementStart(2, \"div\", 8)(3, \"label\", 9);\n    i0.ɵɵtext(4, \"E-mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8)(7, \"label\", 11);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"button\", 13);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \" | \");\n    i0.ɵɵelementStart(14, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AuthComponent_form_4_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSwitchMode());\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(1);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"disabled\", !_r3.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.isLoginMode ? \"Log In\" : \"Sign Up\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Switch to \", ctx_r2.isLoginMode ? \"Sign Up\" : \"Log In\", \" \");\n  }\n}\nexport class AuthComponent {\n  constructor(authService, router, componentFactoryResolver, store) {\n    this.authService = authService;\n    this.router = router;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.store = store;\n    this.isLoginMode = true;\n    this.isLoading = false;\n    this.error = null;\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  onSubmit(form) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n    let authObs;\n    this.isLoading = true;\n    if (this.isLoginMode) {\n      // authObs = this.authService.login(email, password);\n      this.store.dispatch(new AuthActions.LoginStart({\n        email: email,\n        password: password\n      }));\n    } else {\n      authObs = this.authService.signup(email, password);\n    }\n    this.store.select(\"auth\").subscribe(authState => {});\n    // authObs.subscribe(\n    //   (resData) => {\n    //     console.log(resData);\n    //     this.isLoading = false;\n    //     this.router.navigate([\"/recipes\"]);\n    //   },\n    //   (errorMessage) => {\n    //     console.log(errorMessage);\n    //     this.error = errorMessage;\n    //     this.showErrorAlert(errorMessage);\n    //     this.isLoading = false;\n    //   }\n    // );\n    form.reset();\n  }\n  onHandleError() {\n    this.error = null;\n  }\n  ngOnDestroy() {\n    if (this.closeSub) {\n      this.closeSub.unsubscribe();\n    }\n  }\n  showErrorAlert(message) {\n    const alertCmpFactory = this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n    const hostViewContainerRef = this.alertHost.viewContainerRef;\n    hostViewContainerRef.clear();\n    const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n    componentRef.instance.message = message;\n    this.closeSub = componentRef.instance.close.subscribe(() => {\n      this.closeSub.unsubscribe();\n      hostViewContainerRef.clear();\n    });\n  }\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i3.Store));\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth\"]],\n  viewQuery: function AuthComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(PlaceholderDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.alertHost = _t.first);\n    }\n  },\n  decls: 5,\n  vars: 2,\n  consts: [[\"appPlaceholder\", \"\"], [1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [\"style\", \"text-align: center\", 4, \"ngIf\"], [3, \"ngSubmit\", 4, \"ngIf\"], [2, \"text-align\", \"center\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AuthComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, AuthComponent_div_3_Template, 2, 0, \"div\", 3);\n      i0.ɵɵtemplate(4, AuthComponent_form_4_Template, 16, 3, \"form\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.EmailValidator, i5.NgModel, i5.NgForm, i6.LoadingSpinnerComponent, i7.PlaceholderDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["AlertComponent","PlaceholderDirective","AuthActions","i0","AuthComponent","constructor","authService","router","componentFactoryResolver","store","onSwitchMode","isLoginMode","onSubmit","form","valid","email","value","password","authObs","isLoading","dispatch","LoginStart","signup","select","subscribe","authState","reset","onHandleError","error","ngOnDestroy","closeSub","unsubscribe","showErrorAlert","message","alertCmpFactory","resolveComponentFactory","hostViewContainerRef","alertHost","viewContainerRef","clear","componentRef","createComponent","instance","close","selectors","viewQuery"],"sourceRoot":"","sources":["/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/auth/auth.component.ts","/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/auth/auth.component.html"],"sourcesContent":["import {\n  Component,\n  ComponentFactoryResolver,\n  OnDestroy,\n  ViewChild,\n} from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthResponseData, AuthService } from \"./auth.service\";\nimport { AlertComponent } from \"../shared/alert/alert.component\";\nimport { PlaceholderDirective } from \"../shared/placeholder/placeholder.directive\";\nimport { Subscription } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport * as fromApp from \"../store/app.reducer\";\nimport * as AuthActions from \"./store/auth.actions\";\n\n@Component({\n  selector: \"app-auth\",\n  templateUrl: \"./auth.component.html\",\n})\nexport class AuthComponent implements OnDestroy {\n  isLoginMode = true;\n  isLoading = false;\n  error: string = null;\n\n  @ViewChild(PlaceholderDirective, { static: false })\n  alertHost: PlaceholderDirective;\n\n  private closeSub: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private store: Store<fromApp.AppState>\n  ) {}\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    let authObs: Observable<AuthResponseData>;\n\n    this.isLoading = true;\n\n    if (this.isLoginMode) {\n      // authObs = this.authService.login(email, password);\n      this.store.dispatch(\n        new AuthActions.LoginStart({ email: email, password: password })\n      );\n    } else {\n      authObs = this.authService.signup(email, password);\n    }\n\n    this.store.select(\"auth\").subscribe((authState) => {});\n\n    // authObs.subscribe(\n    //   (resData) => {\n    //     console.log(resData);\n    //     this.isLoading = false;\n    //     this.router.navigate([\"/recipes\"]);\n    //   },\n    //   (errorMessage) => {\n    //     console.log(errorMessage);\n    //     this.error = errorMessage;\n    //     this.showErrorAlert(errorMessage);\n    //     this.isLoading = false;\n    //   }\n    // );\n\n    form.reset();\n  }\n\n  onHandleError() {\n    this.error = null;\n  }\n\n  ngOnDestroy(): void {\n    if (this.closeSub) {\n      this.closeSub.unsubscribe();\n    }\n  }\n\n  private showErrorAlert(message: string) {\n    const alertCmpFactory =\n      this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n    const hostViewContainerRef = this.alertHost.viewContainerRef;\n    hostViewContainerRef.clear();\n\n    const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n\n    componentRef.instance.message = message;\n    this.closeSub = componentRef.instance.close.subscribe(() => {\n      this.closeSub.unsubscribe();\n      hostViewContainerRef.clear();\n    });\n  }\n}\n","<ng-template appPlaceholder></ng-template>\n<div class=\"row\">\n  <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n    <!-- <div class=\"alert alert-danger\" *ngIf=\"error\">\n      <p>{{ error }}</p>\n    </div> -->\n    <!-- <app-alert\n      [message]=\"error\"\n      *ngIf=\"error\"\n      (close)=\"onHandleError()\"\n    ></app-alert> -->\n    <div *ngIf=\"isLoading\" style=\"text-align: center\">\n      <app-loading-spinner></app-loading-spinner>\n    </div>\n    <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\n      <div class=\"form-group\">\n        <label for=\"email\">E-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          class=\"form-control\"\n          ngModel\n          name=\"email\"\n          required\n          email\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          class=\"form-control\"\n          ngModel\n          name=\"password\"\n          required\n          minlength=\"6\"\n        />\n      </div>\n      <div>\n        <button\n          class=\"btn btn-primary\"\n          type=\"submit\"\n          [disabled]=\"!authForm.valid\"\n        >\n          {{ isLoginMode ? \"Log In\" : \"Sign Up\" }}\n        </button>\n        |\n        <button class=\"btn btn-primary\" type=\"button\" (click)=\"onSwitchMode()\">\n          Switch to {{ isLoginMode ? \"Sign Up\" : \"Log In\" }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}