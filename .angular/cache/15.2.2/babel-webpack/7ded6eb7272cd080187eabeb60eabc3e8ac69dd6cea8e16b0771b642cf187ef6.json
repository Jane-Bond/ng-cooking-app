{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { exhaustMap, take } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport let AuthInterceptorService = /*#__PURE__*/(() => {\n  class AuthInterceptorService {\n    constructor(authService) {\n      this.authService = authService;\n    }\n    intercept(req, next) {\n      return this.authService.user.pipe(take(1), exhaustMap(user => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          params: new HttpParams().set(\"auth\", user.token)\n        });\n        return next.handle(modifiedReq);\n      }));\n    }\n  }\n  AuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.AuthService));\n  };\n  AuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac\n  });\n  return AuthInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}