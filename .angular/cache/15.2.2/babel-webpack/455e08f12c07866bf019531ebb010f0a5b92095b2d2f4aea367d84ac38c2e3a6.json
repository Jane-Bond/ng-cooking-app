{"ast":null,"code":"import { Ingredient } from \"src/app/shared/ingredient.model\";\nimport * as ShoppingListActions from \"../store/shopping-list.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-list.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"f\"];\nfunction ShoppingEditComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ShoppingEditComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onDelete());\n    });\n    i0.ɵɵtext(1, \" Delete \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ShoppingEditComponent {\n  constructor(slService, store) {\n    this.slService = slService;\n    this.store = store;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.subscription = this.slService.startedEditing.subscribe(index => {\n      this.editedItemIndex = index;\n      this.editMode = true;\n      this.editedItem = this.slService.getIngredient(index);\n      this.slForm.setValue({\n        name: this.editedItem.name,\n        amount: this.editedItem.amount\n      });\n    });\n  }\n  onSubmit(form) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if (this.editMode) {\n      // this.slService.updateIngredient(this.editedItemIndex, newIngredient);\n      this.store.dispatch(new ShoppingListActions.UpdateIngredient({\n        index: this.editedItemIndex,\n        ingredient: newIngredient\n      }));\n    } else {\n      // this.slService.addIngredient(newIngredient);\n      this.store.dispatch(new ShoppingListActions.AddIngeredint(newIngredient));\n    }\n    this.editMode = false;\n    form.reset();\n  }\n  onClear() {\n    this.slForm.reset();\n    this.editMode = false;\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n  }\n  onDelete() {\n    // this.slService.deleteIngredient(this.editedItemIndex);\n    this.store.dispatch(new ShoppingListActions.DeleteIngredient(this.editedItemIndex));\n    this.onClear();\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n  }\n}\nShoppingEditComponent.ɵfac = function ShoppingEditComponent_Factory(t) {\n  return new (t || ShoppingEditComponent)(i0.ɵɵdirectiveInject(i1.ShoppingListService), i0.ɵɵdirectiveInject(i2.Store));\n};\nShoppingEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShoppingEditComponent,\n  selectors: [[\"app-shopping-edit\"]],\n  viewQuery: function ShoppingEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slForm = _t.first);\n    }\n  },\n  decls: 20,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"col-sm-5\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"col-sm-2\", \"form-group\"], [\"for\", \"amout\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"ngModel\", \"\", \"required\", \"\", \"pattern\", \"^[1-9]+[0-9]*$\", 1, \"form-control\"], [1, \"col-xs-12\", \"actions-wrapper\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"class\", \"btn btn-danger\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function ShoppingEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ShoppingEditComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 0)(14, \"div\", 10)(15, \"button\", 11);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, ShoppingEditComponent_button_17_Template, 2, 0, \"button\", 12);\n      i0.ɵɵelementStart(18, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function ShoppingEditComponent_Template_button_click_18_listener() {\n        return ctx.onClear();\n      });\n      i0.ɵɵtext(19, \" Clear \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.editMode ? \"Update\" : \"Add\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.PatternValidator, i3.NgModel, i3.NgForm, i4.NgIf],\n  styles: [\".actions-wrapper[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:not(:last-child) {\\n  margin-right: .25rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvcHBpbmctbGlzdC9zaG9wcGluZy1lZGl0L3Nob3BwaW5nLWVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7O0FBRUg7RUFDRSxvQkFBb0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAuYnRuLXN1Y2Nlc3Mge1xuICBtYXJnaW4tcmlnaHQ6IC4yNXJlbTtcbn1cblxuLmJ0bi1kYW5nZXIge1xuICBtYXJnaW4tcmlnaHQ6IC4yNXJlbTtcbn0gKi9cblxuLmFjdGlvbnMtd3JhcHBlciAuYnRuOm5vdCg6bGFzdC1jaGlsZCkge1xuICBtYXJnaW4tcmlnaHQ6IC4yNXJlbTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,QAAQ,iCAAiC;AAE5D,OAAO,KAAKC,mBAAmB,MAAM,gCAAgC;;;;;;;;;;IC2B3DC,kCAKC;IAFCA;MAAAA;MAAA;MAAA,OAASA,gCAAU;IAAA,EAAC;IAGpBA,wBACF;IAAAA,iBAAS;;;AD1BnB,OAAM,MAAOC,qBAAqB;EAOhCC,YACUC,SAA8B,EAC9BC,KAAuC;IADvC,cAAS,GAATD,SAAS;IACT,UAAK,GAALC,KAAK;IANf,aAAQ,GAAG,KAAK;EAOb;EAEHC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,SAAS,CAACI,cAAc,CAACC,SAAS,CACxDC,KAAa,IAAI;MAChB,IAAI,CAACC,eAAe,GAAGD,KAAK;MAC5B,IAAI,CAACE,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACT,SAAS,CAACU,aAAa,CAACJ,KAAK,CAAC;MACrD,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC;QACnBC,IAAI,EAAE,IAAI,CAACJ,UAAU,CAACI,IAAI;QAC1BC,MAAM,EAAE,IAAI,CAACL,UAAU,CAACK;OACzB,CAAC;IACJ,CAAC,CACF;EACH;EAEAC,QAAQ,CAACC,IAAY;IACnB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;IACxB,MAAMC,aAAa,GAAG,IAAIvB,UAAU,CAACsB,KAAK,CAACJ,IAAI,EAAEI,KAAK,CAACH,MAAM,CAAC;IAC9D,IAAI,IAAI,CAACN,QAAQ,EAAE;MACjB;MACA,IAAI,CAACP,KAAK,CAACkB,QAAQ,CACjB,IAAIvB,mBAAmB,CAACwB,gBAAgB,CAAC;QACvCd,KAAK,EAAE,IAAI,CAACC,eAAe;QAC3Bc,UAAU,EAAEH;OACb,CAAC,CACH;KACF,MAAM;MACL;MACA,IAAI,CAACjB,KAAK,CAACkB,QAAQ,CAAC,IAAIvB,mBAAmB,CAAC0B,aAAa,CAACJ,aAAa,CAAC,CAAC;;IAE3E,IAAI,CAACV,QAAQ,GAAG,KAAK;IACrBQ,IAAI,CAACO,KAAK,EAAE;EACd;EAEAC,OAAO;IACL,IAAI,CAACb,MAAM,CAACY,KAAK,EAAE;IACnB,IAAI,CAACf,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACP,KAAK,CAACkB,QAAQ,CAAC,IAAIvB,mBAAmB,CAAC6B,QAAQ,EAAE,CAAC;EACzD;EAEAC,QAAQ;IACN;IACA,IAAI,CAACzB,KAAK,CAACkB,QAAQ,CACjB,IAAIvB,mBAAmB,CAAC+B,gBAAgB,CAAC,IAAI,CAACpB,eAAe,CAAC,CAC/D;IACD,IAAI,CAACiB,OAAO,EAAE;EAChB;EAEAI,WAAW;IACT,IAAI,CAACzB,YAAY,CAAC0B,WAAW,EAAE;IAC/B,IAAI,CAAC5B,KAAK,CAACkB,QAAQ,CAAC,IAAIvB,mBAAmB,CAAC6B,QAAQ,EAAE,CAAC;EACzD;;AA9DW3B,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAgC;EAAAC;IAAA;;;;;;;;;;;;;;MCdlClC,8BAAiB;MAEPA;QAAAA;QAAA;QAAA,OAAYA,gCAAW;MAAA,EAAC;MAC5BA,8BAAiB;MAEKA,oBAAI;MAAAA,iBAAQ;MAC9BA,2BAOE;MACJA,iBAAM;MACNA,8BAAiC;MACZA,uBAAM;MAAAA,iBAAQ;MACjCA,4BAQE;MACJA,iBAAM;MAERA,+BAAiB;MAGXA,aACF;MAAAA,iBAAS;MACTA,+EAOS;MACTA,mCAAkE;MAApBA;QAAA,OAASmC,aAAS;MAAA,EAAC;MAC/DnC,wBACF;MAAAA,iBAAS;;;;MAbqCA,gBAAqB;MAArBA,qCAAqB;MACjEA,eACF;MADEA,gEACF;MAKGA,eAAc;MAAdA,mCAAc","names":["Ingredient","ShoppingListActions","i0","ShoppingEditComponent","constructor","slService","store","ngOnInit","subscription","startedEditing","subscribe","index","editedItemIndex","editMode","editedItem","getIngredient","slForm","setValue","name","amount","onSubmit","form","value","newIngredient","dispatch","UpdateIngredient","ingredient","AddIngeredint","reset","onClear","StopEdit","onDelete","DeleteIngredient","ngOnDestroy","unsubscribe","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/shopping-list/shopping-edit/shopping-edit.component.ts","/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/shopping-list/shopping-edit/shopping-edit.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Store } from \"@ngrx/store\";\nimport { Subscription } from \"rxjs\";\nimport { Ingredient } from \"src/app/shared/ingredient.model\";\nimport { ShoppingListService } from \"../shopping-list.service\";\nimport * as ShoppingListActions from \"../store/shopping-list.actions\";\nimport * as fromShoppingList from \"../store/shopping-list.reducer\";\n\n@Component({\n  selector: \"app-shopping-edit\",\n  templateUrl: \"./shopping-edit.component.html\",\n  styleUrls: [\"./shopping-edit.component.css\"],\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild(\"f\") slForm: NgForm;\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem: Ingredient;\n\n  constructor(\n    private slService: ShoppingListService,\n    private store: Store<fromShoppingList.AppState>\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.slService.startedEditing.subscribe(\n      (index: number) => {\n        this.editedItemIndex = index;\n        this.editMode = true;\n        this.editedItem = this.slService.getIngredient(index);\n        this.slForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount,\n        });\n      }\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if (this.editMode) {\n      // this.slService.updateIngredient(this.editedItemIndex, newIngredient);\n      this.store.dispatch(\n        new ShoppingListActions.UpdateIngredient({\n          index: this.editedItemIndex,\n          ingredient: newIngredient,\n        })\n      );\n    } else {\n      // this.slService.addIngredient(newIngredient);\n      this.store.dispatch(new ShoppingListActions.AddIngeredint(newIngredient));\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onClear() {\n    this.slForm.reset();\n    this.editMode = false;\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n  }\n\n  onDelete() {\n    // this.slService.deleteIngredient(this.editedItemIndex);\n    this.store.dispatch(\n      new ShoppingListActions.DeleteIngredient(this.editedItemIndex)\n    );\n    this.onClear();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-5 form-group\">\n          <label for=\"name\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            class=\"form-control\"\n            name=\"name\"\n            ngModel\n            required\n          />\n        </div>\n        <div class=\"col-sm-2 form-group\">\n          <label for=\"amout\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            class=\"form-control\"\n            name=\"amount\"\n            ngModel\n            required\n            pattern=\"^[1-9]+[0-9]*$\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12 actions-wrapper\">\n          <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!f.valid\">\n            {{ editMode ? \"Update\" : \"Add\" }}\n          </button>\n          <button\n            class=\"btn btn-danger\"\n            type=\"button\"\n            (click)=\"onDelete()\"\n            *ngIf=\"editMode\"\n          >\n            Delete\n          </button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClear()\">\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}