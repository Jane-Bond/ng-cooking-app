{"ast":null,"code":"import * as RecipesActions from \"./recipe.actions\";\nconst initialState = {\n  recipes: []\n};\nexport function recipeReducer(state = initialState, action) {\n  switch (action.type) {\n    case RecipesActions.SET_RECIPES:\n      return {\n        ...state,\n        recipes: [...action.payload]\n      };\n    case RecipesActions.ADD_RECIPE:\n      return {\n        ...state,\n        recipes: [...state.recipes, action.payload]\n      };\n    case RecipesActions.UPDATE_RECIPE:\n      const updatedRecipe = {\n        ...state.recipes[action.payolad.index],\n        ...action.payolad.newRecipe\n      };\n      const updatedRecipes = [...state.recipes];\n      updatedRecipes[action.payolad.index] = updatedRecipe;\n      return {\n        ...state,\n        recipes: updatedRecipes\n      };\n    case RecipesActions.DELETE_RECIPE:\n      return {\n        ...state,\n        recipes: state.recipes.filter((recipe, index) => {\n          return index !== action.payload;\n        })\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,cAAc,MAAM,kBAAkB;AAMlD,MAAMC,YAAY,GAAU;EAC1BC,OAAO,EAAE;CACV;AAED,OAAM,SAAUC,aAAa,CAC3BC,KAAK,GAAGH,YAAY,EACpBI,MAAqC;EAErC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,cAAc,CAACO,WAAW;MAC7B,OAAO;QACL,GAAGH,KAAK;QACRF,OAAO,EAAE,CAAC,GAAGG,MAAM,CAACG,OAAO;OAC5B;IACH,KAAKR,cAAc,CAACS,UAAU;MAC5B,OAAO;QACL,GAAGL,KAAK;QACRF,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAO,EAAEG,MAAM,CAACG,OAAO;OAC3C;IACH,KAAKR,cAAc,CAACU,aAAa;MAC/B,MAAMC,aAAa,GAAG;QACpB,GAAGP,KAAK,CAACF,OAAO,CAACG,MAAM,CAACO,OAAO,CAACC,KAAK,CAAC;QACtC,GAAGR,MAAM,CAACO,OAAO,CAACE;OACnB;MACD,MAAMC,cAAc,GAAG,CAAC,GAAGX,KAAK,CAACF,OAAO,CAAC;MACzCa,cAAc,CAACV,MAAM,CAACO,OAAO,CAACC,KAAK,CAAC,GAAGF,aAAa;MACpD,OAAO;QACL,GAAGP,KAAK;QACRF,OAAO,EAAEa;OACV;IAEH,KAAKf,cAAc,CAACgB,aAAa;MAC/B,OAAO;QACL,GAAGZ,KAAK;QACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACe,MAAM,CAAC,CAACC,MAAM,EAAEL,KAAK,KAAI;UAC9C,OAAOA,KAAK,KAAKR,MAAM,CAACG,OAAO;QACjC,CAAC;OACF;IAEH;MACE,OAAOJ,KAAK;EAAC;AAEnB","names":["RecipesActions","initialState","recipes","recipeReducer","state","action","type","SET_RECIPES","payload","ADD_RECIPE","UPDATE_RECIPE","updatedRecipe","payolad","index","newRecipe","updatedRecipes","DELETE_RECIPE","filter","recipe"],"sourceRoot":"","sources":["/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/recipes/store/recipe.reducer.ts"],"sourcesContent":["import { Recipe } from \"../recipe.model\";\nimport * as RecipesActions from \"./recipe.actions\";\n\nexport interface State {\n  recipes: Recipe[];\n}\n\nconst initialState: State = {\n  recipes: [],\n};\n\nexport function recipeReducer(\n  state = initialState,\n  action: RecipesActions.RecipesActions\n) {\n  switch (action.type) {\n    case RecipesActions.SET_RECIPES:\n      return {\n        ...state,\n        recipes: [...action.payload],\n      };\n    case RecipesActions.ADD_RECIPE:\n      return {\n        ...state,\n        recipes: [...state.recipes, action.payload],\n      };\n    case RecipesActions.UPDATE_RECIPE:\n      const updatedRecipe = {\n        ...state.recipes[action.payolad.index],\n        ...action.payolad.newRecipe,\n      };\n      const updatedRecipes = [...state.recipes];\n      updatedRecipes[action.payolad.index] = updatedRecipe;\n      return {\n        ...state,\n        recipes: updatedRecipes,\n      };\n\n    case RecipesActions.DELETE_RECIPE:\n      return {\n        ...state,\n        recipes: state.recipes.filter((recipe, index) => {\n          return index !== action.payload;\n        }),\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}