{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap } from \"rxjs/operators\";\nimport * as RecipesActions from \"./recipe.actions\";\nexport class RecipeEffects {\n  constructor(actions$, http) {\n    this.actions$ = actions$;\n    this.http = http;\n    this.fectRecipes = createEffect(() => this.actions$.pipe(ofType(RecipesActions.FETCH_RECIPES), switchMap(() => {\n      return this.http.get(\"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\");\n    }), map(recipes => {\n      return recipes.map(recipe => {\n        return {\n          ...recipe,\n          ingredients: recipe.ingredients ? recipe.ingredients : []\n        };\n      });\n    }), map(recipes => {\n      return new RecipesActions.SetRecipes(recipes);\n    })), {\n      dispatch: false\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AAC/C,OAAO,KAAKC,cAAc,MAAM,kBAAkB;AAGlD,OAAM,MAAOC,aAAa;EAyBxBC,YAAoBC,QAAiB,EAAUC,IAAgB;IAA3C,aAAQ,GAARD,QAAQ;IAAmB,SAAI,GAAJC,IAAI;IAxBnD,gBAAW,GAAGR,YAAY,CACxB,MACE,IAAI,CAACO,QAAQ,CAACE,IAAI,CAChBR,MAAM,CAACG,cAAc,CAACM,aAAa,CAAC,EACpCP,SAAS,CAAC,MAAK;MACb,OAAO,IAAI,CAACK,IAAI,CAACG,GAAG,CAClB,+FAA+F,CAChG;IACH,CAAC,CAAC,EACFT,GAAG,CAAEU,OAAO,IAAI;MACd,OAAOA,OAAO,CAACV,GAAG,CAAEW,MAAM,IAAI;QAC5B,OAAO;UACL,GAAGA,MAAM;UACTC,WAAW,EAAED,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,GAAG;SACxD;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,EACFZ,GAAG,CAAEU,OAAO,IAAI;MACd,OAAO,IAAIR,cAAc,CAACW,UAAU,CAACH,OAAO,CAAC;IAC/C,CAAC,CAAC,CACH,EACH;MAAEI,QAAQ,EAAE;IAAK,CAAE,CACpB;EAEiE","names":["createEffect","ofType","map","switchMap","RecipesActions","RecipeEffects","constructor","actions$","http","pipe","FETCH_RECIPES","get","recipes","recipe","ingredients","SetRecipes","dispatch"],"sourceRoot":"","sources":["/Users/evgeniabondar/Desktop/Git folder/ng-cooking-app/src/app/recipes/store/recipe.effects.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap } from \"rxjs/operators\";\nimport * as RecipesActions from \"./recipe.actions\";\nimport { Recipe } from \"../recipe.model\";\n\nexport class RecipeEffects {\n  fectRecipes = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(RecipesActions.FETCH_RECIPES),\n        switchMap(() => {\n          return this.http.get<Recipe[]>(\n            \"https://angular-cooking-app-2a43c-default-rtdb.europe-west1.firebasedatabase.app/recipes.json\"\n          );\n        }),\n        map((recipes) => {\n          return recipes.map((recipe) => {\n            return {\n              ...recipe,\n              ingredients: recipe.ingredients ? recipe.ingredients : [],\n            };\n          });\n        }),\n        map((recipes) => {\n          return new RecipesActions.SetRecipes(recipes);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private http: HttpClient) {}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}